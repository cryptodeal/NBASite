const mongoose = require('mongoose');
const mongoosePaginate = require('mongoose-paginate-v2');
const Schema = mongoose.Schema;
const URLSlugs = require('mongoose-url-slugs');

const Audio = new Schema ({
  title: { type: String, required: true, index: true },
  state: { type: String, enum: ['draft', 'published', 'archived'], default: 'draft', required: true, index: true },
	author: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User', index: true, many: true }],
	publishedDate: { type: Date, index: true },
  content: {
		brief: { type: Object },
  },
  categories: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category', index: true, many: true }],
  //Add a Favorites count, array of user id's that have favorited the audio
  //Audio timestamps w tag
    //Array of objects, w the name of the tag and the timestamp the tag begins to occur
  //Reports
    //Can report video for variety of reasons
      //probably create separate DB model for reports, which keeps a list of reasons for reporting
      //array with object referencing this 'report' database model
});

Audio.virtual('content.full').get(function () {
    return this.content.extended || this.content.brief;
})

Audio.plugin(URLSlugs('title', {field: 'slug'}));
Audio.plugin(mongoosePaginate);

module.exports = mongoose.model('Audio', Audio)
